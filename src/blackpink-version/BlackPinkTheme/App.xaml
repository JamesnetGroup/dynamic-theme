<Application x:Class="BlackPinkTheme.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:BlackPinkTheme"
             xmlns:props="clr-namespace:BlackPinkTheme.Core;assembly=BlackPinkTheme.Core"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/BlackPinkTheme.Resources;component/LightTheme.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            
            <Geometry x:Key="CheckIconData">M17.5625,6.5625 L10.0005,14.188 6.5004996,10.53201 5.0942497,11.875848 10.031599,16.876176 19.000529,8.0005944</Geometry>

            <Style x:Key="MainBorderStyle" TargetType="{x:Type Border}">
                <Setter Property="props:ThemeProps.Background" Value="{Binding Path=Background, RelativeSource={RelativeSource TemplatedParent}}"/>
                <Setter Property="BorderBrush" Value="{Binding Path=BorderBrush, RelativeSource={RelativeSource TemplatedParent}}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Padding" Value="14"/>
                <Setter Property="CornerRadius" Value="4"/>
            </Style>

            <Style x:Key="ToggleContentStyle" TargetType="{x:Type TextBlock}">
                <Setter Property="Text" Value="{Binding Path=Content, RelativeSource={RelativeSource TemplatedParent}}"/>
                <Setter Property="HorizontalAlignment" Value="Center"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
            </Style>

            <Style TargetType="{x:Type ToggleButton}">
                <Setter Property="Background" Value="{DynamicResource BackgroundBrush}"/>
                <Setter Property="Foreground" Value="{DynamicResource FontBrush}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property="Content" Value="Dark Theme"/>
                <Setter Property="Tag" Value="Light Theme"/>
                <Setter Property="Margin" Value="10"/>
                <Setter Property="HorizontalAlignment" Value="Left"/>
                <Setter Property="FontWeight" Value="Bold"/>
                <Setter Property="FontSize" Value="20"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                            <Border Style="{StaticResource MainBorderStyle}">
                                <TextBlock x:Name="Content" Style="{StaticResource ToggleContentStyle}"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter Property="Background" Value="{DynamicResource BackgroundBrush}"/>
                                    <Setter Property="Foreground" Value="{DynamicResource FontBrush}"/>
                                    <Setter TargetName="Content" Property="Text" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Tag}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="{x:Type ListBoxItem}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ListBoxItem}">
                            <Border Background="{TemplateBinding Background}">
                                <ContentPresenter Margin="10"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter Property="Background" Value="{DynamicResource SelectedBrush}"/>
                                    <Setter Property="Foreground" Value="{DynamicResource SelectedFontBrush}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="{x:Type ListBox}">
                <Setter Property="Background" Value="{DynamicResource BackgroundBrush}"/>
                <Setter Property="Foreground" Value="{DynamicResource FontBrush}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource FontBrush}"/>
                <Setter Property="SelectedIndex" Value="2"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="MinWidth" Value="200"/>
                <Setter Property="Margin" Value="20 0 0 0"/>
                <Setter Property="FontSize" Value="20"/>

            </Style>

            <Style x:Key="MainSliderStyle" TargetType="{x:Type Border}">
                <Setter Property="Background" Value="{Binding Path=Background, RelativeSource={RelativeSource TemplatedParent}}"/>
                <Setter Property="BorderBrush" Value="{Binding Path=BorderBrush, RelativeSource={RelativeSource TemplatedParent}}"/>
                <Setter Property="BorderThickness" Value="{Binding Path=BorderThickness, RelativeSource={RelativeSource TemplatedParent}}"/>
            </Style>


            <Style x:Key="EllipseStyle" TargetType="{x:Type Ellipse}">
                <Setter Property="props:ThemeProps.Fill" Value="{DynamicResource BackgroundBrush}"/>
                <Setter Property="Stroke" Value="{DynamicResource FontBrush}"/>
                <Setter Property="StrokeThickness" Value="2"/>
                <Setter Property="Opacity" Value="1"/>
                <Setter Property="Width" Value="50"/>
                <Setter Property="Height" Value="50"/>
            </Style>

            <Style x:Key="SliderBorderStyle" TargetType="{x:Type Border}">
                <Setter Property="Background" Value="{DynamicResource SliderBrush}"/>
                <Setter Property="Height" Value="2.5"/>
                <Setter Property="Margin" Value="25 0 25 0"/>
            </Style>

            <Style x:Key="SelectionRangeStyle" TargetType="{x:Type Border}">
                <Setter Property="Background" Value="{DynamicResource SelectedBrush}"/>
                <Setter Property="Height" Value="2.5"/>
                <Setter Property="Margin" Value="25 0 25 0"/>
                <Setter Property="HorizontalAlignment" Value="Left"/>
                <Setter Property="Visibility" Value="Collapsed"/>
            </Style>

            <Style x:Key="SliderThumbStyle" TargetType="{x:Type Thumb}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Thumb}">
                            <Ellipse Style="{StaticResource EllipseStyle}"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="{x:Type Slider}">
                <Setter Property="SelectionEnd" Value="{Binding RelativeSource={RelativeSource Self}, Path=Value}"/>
                <Setter Property="IsSelectionRangeEnabled" Value="True"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="SelectionStart" Value="0"/>
                <Setter Property="Minimum" Value="0"/>
                <Setter Property="Maximum" Value="100"/>
                <Setter Property="Margin" Value="10"/>
                <Setter Property="Value" Value="75"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Slider}">
                            <Border Style="{StaticResource MainSliderStyle}">
                                <Grid>
                                    <Border Style="{StaticResource SliderBorderStyle}"/>
                                    <Border x:Name="PART_SelectionRange" Style="{StaticResource SelectionRangeStyle}"/>
                                    <Track x:Name="PART_Track">
                                        <Track.Thumb>
                                            <Thumb Style="{StaticResource SliderThumbStyle}"/>
                                        </Track.Thumb>
                                    </Track>
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsSelectionRangeEnabled" Value="true">
                                    <Setter TargetName="PART_SelectionRange" Property="Visibility" Value="Visible"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="CheckContentStyle" TargetType="{x:Type ContentPresenter}">
                <Setter Property="Grid.Column" Value="1"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="Content" Value="{Binding Path=Content, RelativeSource={RelativeSource TemplatedParent}}"/>
            </Style>

            <Style x:Key="BorderElementStyle" TargetType="{x:Type Border}">
                <Setter Property="Width" Value="24"/>
                <Setter Property="Height" Value="24"/>
                <Setter Property="Background" Value="{DynamicResource BackgroundBrush}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource FontBrush}"/>
                <Setter Property="BorderThickness" Value="2"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="Margin" Value="0,0,8,0"/>
            </Style>

            <Style x:Key="CheckPathStyle" TargetType="{x:Type Path}">
                <Setter Property="Data" Value="{StaticResource CheckIconData}"/>
                <Setter Property="Fill" Value="{DynamicResource FontBrush}"/>
                <Setter Property="HorizontalAlignment" Value="Center"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="Stretch" Value="Uniform"/>
                <Setter Property="Width" Value="16"/>
                <Setter Property="Height" Value="16"/>
                <Setter Property="Visibility" Value="Collapsed"/>
            </Style>

            <Style TargetType="{x:Type CheckBox}">
                <Setter Property="props:ThemeProps.Foreground" Value="{DynamicResource FontBrush}"/>
                <Setter Property="IsChecked" Value="True"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="FontWeight" Value="Bold"/>
                <Setter Property="FontSize" Value="16"/>
                <Setter Property="Margin" Value="0,8,0,8"/>
                <Setter Property="Margin" Value="10"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type CheckBox}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Border x:Name="BorderElement" Style="{StaticResource BorderElementStyle}">
                                    <Path x:Name="IconElement" Style="{StaticResource CheckPathStyle}"/>
                                </Border>
                                <ContentPresenter Style="{StaticResource CheckContentStyle}"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Opacity" Value="0.9"/>
                                </Trigger>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter TargetName="IconElement" Property="Visibility" Value="Visible"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="VickyTextStyle" TargetType="{x:Type TextBlock}">
                <Setter Property="props:ThemeProps.Foreground" Value="{DynamicResource FontBrush}"/>
                <Setter Property="Margin" Value="10 10 10 0"/>
                <Setter Property="Text" Value="Hello I'm Vicky"/>
                <Setter Property="FontSize" Value="40"/>
                <Setter Property="FontWeight" Value="Bold"/>
            </Style>

            <Style x:Key="HttpsTextStyle" TargetType="{x:Type TextBlock}">
                <Setter Property="props:ThemeProps.Foreground" Value="{DynamicResource FontBrush}"/>
                <Setter Property="Margin" Value="10 0 10 10"/>
                <Setter Property="Text" Value="https://jamesnet.dev"/>
                <Setter Property="FontSize" Value="34"/>
            </Style>

            <Style x:Key="VerticalLineStyle" TargetType="{x:Type Border}">
                <Setter Property="props:ThemeProps.BorderBrush" Value="{DynamicResource BorderBrush}"/>
                <Setter Property="BorderThickness" Value="0 0 0 2"/>
                <Setter Property="Margin" Value="10"/>
            </Style>

            <Style x:Key="MainGridStyle" TargetType="{x:Type Grid}">
                <Setter Property="props:ThemeProps.Background" Value="{DynamicResource BackgroundBrush}"/>
            </Style>

            <Style x:Key="MainWrapStyle" TargetType="{x:Type WrapPanel}">
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="HorizontalAlignment" Value="Center"/>
                <Setter Property="Margin" Value="50"/>
            </Style>

            <Style x:Key="MainStackStyle" TargetType="{x:Type StackPanel}">
                <Setter Property="Width" Value="1000"/>
                <Setter Property="HorizontalAlignment" Value="Center"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
            </Style>

            <Style x:Key="CheckStackStyle" TargetType="{x:Type StackPanel}">
                <Setter Property="Width" Value="200"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
            </Style>

            <Style x:Key="SliderStackStyle" TargetType="{x:Type StackPanel}">
                <Setter Property="Width" Value="400"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
            </Style>
        </ResourceDictionary>
    </Application.Resources>
</Application>
